# ============================================================
# üß© Basecamp to Notion Migration Tool ‚Äî .env.sample
# ============================================================
# Copy this file to `.env` and fill in your values.
# This file configures Basecamp and Notion API access,
# optional project and tool filters, and runtime flags.
# ============================================================

# ------------------------------------------------------------
# üöÄ Basecamp API (OAuth2 Application)
# ------------------------------------------------------------

# Basecamp App Client ID
# How to get:
# 1. Go to: https://launchpad.37signals.com/registrations/new
# 2. Register a new application
# 3. Set Redirect URI to: http://localhost:4567/callback
# 4. After creation, copy your App ID here
BASECAMP_CLIENT_ID=your_basecamp_client_id

# Basecamp App Client Secret
# Found alongside your App ID in Basecamp developer console
BASECAMP_CLIENT_SECRET=your_basecamp_client_secret

# Basecamp OAuth Redirect URI
# For local development, use: http://localhost:4567/callback
BASECAMP_REDIRECT_URI=http://localhost:4567/callback

# Basecamp account ID (found in your Basecamp URL)
# Example: https://3.basecamp.com/123456789/ => use 123456789
BASECAMP_ACCOUNT_ID=123456789

# ------------------------------------------------------------
# üß© Notion API
# ------------------------------------------------------------

# Notion Root Page ID (where all projects will be created)
# Steps:
# 1. Go to your Notion page
# 2. Copy link (https://www.notion.so/workspace/Your-Page-Name-abcdef1234567890abcdef1234567890)
# 3. Use the ID part: "abcdef1234567890abcdef1234567890"
NOTION_ROOT_PAGE_ID=abcdef1234567890abcdef1234567890

# Notion Integration Token
# How to get:
# 1. Go to: https://www.notion.so/my-integrations
# 2. Create a new integration
# 3. Give it "Insert content", "Read content", and "Update content" permissions
# 4. Share your target Notion page with this integration (Important!)
# 5. Copy and paste the integration "Internal Integration Token"
NOTION_API_KEY=secret_your_notion_token

# ------------------------------------------------------------
# üéØ Optional Filters (safe to leave blank)
# ------------------------------------------------------------

# Only sync projects matching this label
# Examples:
# FILTER_PROJECT_LABEL="Marketing HQ"
# FILTER_PROJECT_LABEL="Buildkite HQ"
FILTER_PROJECT_LABEL=

# Exclude specific projects from matching this label (partial match, case-insensitive)
# EXCLUDE_PROJECT_LABEL="HR Team"

# Only sync a specific Basecamp tool type (for testing or targeted sync)
# Valid values (case-sensitive):
# - message_board
# - schedule
# - vault
# - chat
# - todoset
# - kanban_board
# - questionnaire
# - inbox
# Example:
# FILTER_TOOL_NAME="chat"
FILTER_TOOL_NAME=

# ------------------------------------------------------------
# ‚öôÔ∏è Runtime Flags (advanced, optional)
# ------------------------------------------------------------

# Enable Basecamp API response caching
# true = cache API responses in ./cache/ (faster repeat runs)
# false = always fetch fresh data from Basecamp
CACHE_ENABLED=false

# Reset mode: delete progress DB and temp files before running
# true = full clean slate (progress.db, ./tmp/, ./cache/ are cleared)
# false = continue from last saved state
RESET=false

# Include archived Basecamp projects in sync
# true = include archived projects alongside active ones
# false = sync active projects only
INCLUDE_ARCHIVED=false

# Optional max concurrent project threads (default: 4)
MAX_PROJECT_THREADS=4

# (future) Debug mode (enable extra verbose logging)
# DEBUG_MODE=true

# ------------------------------------------------------------
# ‚öôÔ∏è Advanced Configuration & Tuning
# ------------------------------------------------------------

# --- Logging --- 
# Optional: Set to 'debug', 'info', 'warn', 'error' (default: 'info')
# LOG_LEVEL="info"

# --- HTTP Client & Retry Behavior (Applies to Notion, Basecamp, etc.) ---
# Maximum number of retry attempts for HTTP requests (default: 5)
HTTP_MAX_RETRY_ATTEMPTS=5
# Initial delay in seconds for exponential backoff (default: 1.0)
HTTP_INITIAL_BACKOFF_SECONDS=1.0
# Maximum delay in seconds for exponential backoff (default: 30.0)
HTTP_MAX_BACKOFF_SECONDS=30.0
# Default wait time in seconds if a 429 response doesn't provide a Retry-After header (default: 5)
DEFAULT_429_RETRY_AFTER_SECONDS=5

# --- Notion Batching Configuration ---
# Maximum number of blocks per API request when appending children (default: 50, Notion API limit is 100)
NOTION_BATCH_MAX_BLOCKS=50
# Maximum payload size in kilobytes (KB) per API request when appending children (default: 700, Notion API limit is ~1000KB)
NOTION_BATCH_MAX_PAYLOAD_KB=700

# --- Google Media Downloads --- 
# Maximum number of retries for Google file downloads (default: 3)
GOOGLE_DOWNLOAD_MAX_RETRIES=3
# Initial delay in seconds for the first retry for Google downloads (default: 1.5)
GOOGLE_DOWNLOAD_INITIAL_DELAY_SECONDS=1.5
# Maximum delay in seconds for Google download retries (default: 15.0)
GOOGLE_DOWNLOAD_MAX_DELAY_SECONDS=15.0
# Multiplier for increasing the delay on subsequent Google download retries (default: 2.0)
GOOGLE_DOWNLOAD_MULTIPLIER=2.0

# --- Selenium & Browser Automation --- 
# Optional: Set to '1' to run headless browser (0 = show browser, 1 = hide browser)
# HEADLESS=0

# Optional: Path to cached Google cookies file (default: ~/.google_cookies.json)
# GOOGLE_COOKIE_FILE=~/.google_cookies.json
# Optional: TTL for cached Google cookies in seconds (default: 28800 = 8 hours)
# GOOGLE_COOKIE_TTL=28800
# Optional: Set to '1' to ignore cookie TTL (useful for debugging, 0 = respect TTL)
# IGNORE_COOKIE_TTL=0
# Optional: Timeout for Google login page in seconds (default: 300)
# GOOGLE_LOGIN_TIMEOUT=300 # This is used by GoogleSession's wait_for_login

# --- Selenium Watchdog Configuration ---
# Number of consecutive Selenium operation failures for the same item (e.g., URL) before attempting a driver restart.
SELENIUM_CONSECUTIVE_OPERATION_FAILURES_THRESHOLD=3
# Number of times to attempt restarting the driver for a single problematic operation before giving up on that specific operation.
SELENIUM_RESTARTS_PER_OPERATION_LIMIT=1
# Total number of times the Selenium driver can be restarted globally during the script's run before the script terminates.
SELENIUM_MAX_GLOBAL_RESTARTS=2

# --- Temporary File Locations ---
# Optional: Path to the directory for storing temporary HTTP payloads for debugging (default: ./tmp/http_payloads)
# HTTP_PAYLOAD_DIR="./tmp/http_payloads"

# Optional: Path to the directory for Selenium browser downloads (default: ./tmp/selenium_browser_downloads)
# SELENIUM_DOWNLOAD_DIR="./tmp/selenium_browser_downloads"

# ------------------------------------------------------------
# ‚úÖ Notes:
# - Rename this file to `.env` before running.
# - Your `.env` is gitignored by default.
# - Do not share your .env publicly.
# ------------------------------------------------------------
